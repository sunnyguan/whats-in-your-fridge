[{"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\index.js":"1","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\App.js":"2","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\reportWebVitals.js":"3","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\FoodList.js":"4","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Dashboard.js":"5","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Recipes.js":"6","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Recipe.js":"7","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\services\\UserInfo.js":"8","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Home.js":"9","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\auth\\Logout.js":"10","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Intro.js":"11","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\RecipeDetails\\DetailedRecipe.js":"12","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\auth\\Login.js":"13","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\graph\\Graph.js":"14"},{"size":517,"mtime":1609978457278,"results":"15","hashOfConfig":"16"},{"size":160,"mtime":1610055803695,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1609978457279,"results":"18","hashOfConfig":"16"},{"size":7782,"mtime":1610079888566,"results":"19","hashOfConfig":"16"},{"size":5558,"mtime":1610055803696,"results":"20","hashOfConfig":"16"},{"size":1476,"mtime":1610063523646,"results":"21","hashOfConfig":"16"},{"size":5353,"mtime":1610079729698,"results":"22","hashOfConfig":"16"},{"size":1603,"mtime":1610079888572,"results":"23","hashOfConfig":"16"},{"size":916,"mtime":1610063523629,"results":"24","hashOfConfig":"16"},{"size":762,"mtime":1610055803702,"results":"25","hashOfConfig":"16"},{"size":2235,"mtime":1610044435200,"results":"26","hashOfConfig":"16"},{"size":2809,"mtime":1610079784773,"results":"27","hashOfConfig":"16"},{"size":881,"mtime":1610038796964,"results":"28","hashOfConfig":"16"},{"size":7432,"mtime":1610078814899,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1sj3kzk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\index.js",[],["62","63"],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\App.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\reportWebVitals.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\FoodList.js",["64","65"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport React, { useEffect } from 'react';\r\nimport { addToList, getUserList, removeFromList, scanReceipt } from '../services/UserInfo';\r\n\r\nimport {updateUnit,updateAmount} from '../services/UserInfo';\r\nimport { EditText, EditTextarea } from 'react-edit-text';\r\nimport 'react-edit-text/dist/index.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: { \r\n        margin: theme.spacing(0, 0, 2),\r\n    },\r\n    addItem: {\r\n        marginBottom: \"10px\",\r\n\r\n    }\r\n}));\r\n\r\nexport default function InteractiveList(props) {\r\n    const classes = useStyles();\r\n    const [foods, setFoods] = React.useState([]);\r\n    const [foodItem, setFoodItem] = React.useState(\"\");\r\n    const [selectedFile, setSelectedFile] = React.useState(null);\r\n    const [amount, setAmount] = React.useState(\"\");\r\n    const [unit, setUnit] = React.useState(\"\");\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        addFood(foodItem,amount,unit);\r\n        setOpen(false);\r\n    }\r\n\r\n    const retrieve = () => {\r\n        getUserList(props.user.googleId).then(data => {\r\n            console.log(data);\r\n            if(data.length !== 0)\r\n                setFoods(data[\"food\"]);\r\n        })\r\n    }\r\n\r\n    useEffect(() => retrieve(), []);\r\n\r\n    const addFood = (value,amount,unit) => {\r\n        addToList(props.user.googleId, value,amount,unit).then(data => setFoods(data[\"food\"]));\r\n    }\r\n    const deleteFood = (value) => {\r\n        removeFromList(props.user.googleId, value).then(data => setFoods(data[\"food\"]));\r\n    };\r\n    \r\n    const saveAmount = (element)=>{\r\n        updateAmount(props.user.googleId, element.name,element.value).then(data => setFoods(data[\"food\"]));\r\n    }\r\n    const saveUnit = (element)=>{\r\n        updateUnit(props.user.googleId, element.name,element.value).then(data => setFoods(data[\"food\"]));\r\n    }\r\n\r\n    const onFileChange = event => { \r\n        var reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            console.log(reader.result);\r\n            var b64 = {\"image\": reader.result.split(\"base64,\")[1], \r\n                       \"name\": props.user.googleId};\r\n            scanReceipt(b64).then(data => console.log(data));\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }; \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                What's in {props.user.givenName}'s fridge:\r\n          </Typography>\r\n            <Button variant=\"contained\" component=\"label\">\r\n                Upload File\r\n                <input type=\"file\" onChange={onFileChange} accept=\"image/*\" hidden/>\r\n            </Button>\r\n\r\n            <div className={classes.demo}>\r\n                <List dense={false}>\r\n                    <Button className={classes.addItem} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                        Add new item\r\n                    </Button>\r\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">New Item</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Please enter your food item\r\n                       </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"item\"\r\n                                label=\"Food Item\"\r\n                                type=\"text\"\r\n                                value={foodItem}\r\n                                onInput={e => setFoodItem(e.target.value)}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"amount\"\r\n                                label=\"amount\"\r\n                                type=\"text\"\r\n                                value={amount}\r\n                                onInput={e => setAmount(e.target.value)}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"unit\"\r\n                                label=\"unit\"\r\n                                type=\"text\"\r\n                                value={unit}\r\n                                onInput={e => setUnit(e.target.value)}\r\n                                fullWidth\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Cancel\r\n                       </Button>\r\n                            <Button onClick={handleSubmit} color=\"primary\">\r\n                                Add\r\n                       </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n\r\n                    {Object.keys(foods).map((key) => (\r\n\r\n                        <>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <FolderIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={key}\r\n                                 \r\n\r\n                                />\r\n\r\n                                <EditText name = {key} value = {foods[key]['amount']} onSave = {saveAmount} style={{width:60}} />\r\n                                <EditText name = {key} value = {foods[key]['unit']} onSave = {saveUnit} style={{width:60}}/>\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    \r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteFood(key)} >\r\n                                        \r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </>\r\n                    ))}\r\n                </List>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Dashboard.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Recipes.js",["66"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Recipe from './Recipe';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRecipes } from '../services/UserInfo';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth'\r\n\r\n\r\nclass Recipes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groups: []\r\n        };\r\n    }\r\n\r\n    getGridListCols = () => {\r\n        if (isWidthUp('xl', this.props.width))\r\n            return 6\r\n        return 12;\r\n    }\r\n\r\n    componentDidMount() {\r\n        getRecipes(this.props.user.googleId).then(data => {\r\n            this.setState({ groups: data });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.groups);\r\n        return (\r\n           <>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Possible Recipes\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                    {this.state.groups.map((recipe, index) => {\r\n                        return (\r\n                            <Grid item xs={this.getGridListCols()}>\r\n                                <Recipe recipe={recipe} />\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Recipes","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Recipe.js",["67","68"],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\services\\UserInfo.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Home.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\auth\\Logout.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\Intro.js",["69","70","71","72","73","74","75","76","77"],"import Login from './auth/Login';\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://c1.staticflickr.com/3/2535/32835771681_fc8eb977d7_c.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(7, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n// function Intro(props) {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n\r\n//     <div> \r\n//       <br></br>\r\n//       <h1>Welcome to What's In Your Fridge?</h1>\r\n\r\n\r\n//     <Login onSuccess={props.onLogin} />\r\n        \r\n    \r\n//     </div>\r\n   \r\n\r\n//   );\r\n// }\r\n\r\n//export default Intro;\r\nexport default function Intro(props) {\r\n  const classes = useStyles();\r\n\r\n  var divStyle = {\r\n    font: \"Times New Roman\",\r\n};\r\n  return (\r\n    < Grid container component=\"main\" className={classes.root}>\r\n    <CssBaseline />\r\n\r\n    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n\r\n    <div className={classes.paper}>\r\n            <br></br>\r\n      <h1 style = {divStyle}>  What's In Your Fridge?</h1>\r\n\r\n      <br></br>\r\n    <Login onSuccess={props.onLogin} />\r\n     \r\n    \r\n    </div>\r\n    </Grid>\r\n</Grid>\r\n      \r\n   \r\n   \r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\RecipeDetails\\DetailedRecipe.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\auth\\Login.js",[],"C:\\Users\\tingh\\Documents\\C1 Hackathon\\whats-in-your-fridge\\src\\components\\graph\\Graph.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":21,"column":20,"nodeType":"85","messageId":"86","endLine":21,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":71,"column":33,"nodeType":"89","endLine":71,"endColumn":35,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":17},{"ruleId":"83","severity":1,"message":"92","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":20},{"ruleId":"83","severity":1,"message":"93","line":15,"column":8,"nodeType":"85","messageId":"86","endLine":15,"endColumn":17},{"ruleId":"83","severity":1,"message":"94","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"95","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"96","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":17},{"ruleId":"83","severity":1,"message":"97","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":24},{"ruleId":"83","severity":1,"message":"98","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":16},{"ruleId":"83","severity":1,"message":"99","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":12},{"ruleId":"83","severity":1,"message":"100","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":11},{"ruleId":"83","severity":1,"message":"101","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":24},{"ruleId":"83","severity":1,"message":"102","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":74,"column":33,"nodeType":"89","endLine":74,"endColumn":35,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'EditTextarea' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieve'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'withWidth' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Typography' is defined but never used.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [retrieve]",{"range":"111","text":"112"},{"range":"113","text":"112"},[2480,2482],"[retrieve]",[2479,2481]]